basePath: /
definitions:
  handler.ErrorResponse:
    properties:
      error:
        type: string
      msg:
        type: string
    type: object
  handler.SuccessResponse:
    properties:
      data: {}
      msg:
        type: string
    type: object
  todo.TodoItem:
    properties:
      created_at:
        type: string
      description:
        type: string
      done:
        type: boolean
      due_date:
        type: string
      id:
        type: integer
      priority:
        type: integer
      updated_at:
        type: string
    type: object
  todo.TodoList:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      public:
        type: boolean
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  todo.UpdateItemInput:
    properties:
      description:
        type: string
      done:
        type: boolean
      due_date:
        type: string
      priority:
        type: integer
      updated_at:
        type: string
    type: object
  todo.UpdateListInput:
    properties:
      description:
        type: string
      public:
        type: boolean
      title:
        type: string
      updated_at:
        type: string
    type: object
  todo.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        maxLength: 50
        minLength: 3
        type: string
      password:
        minLength: 6
        type: string
      updated_at:
        type: string
    required:
    - email
    - name
    - password
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for TodoList Application
  title: Todo App API
  version: "1.0"
paths:
  /api/items/{itemID}:
    delete:
      consumes:
      - application/json
      description: Deletes a todo item by its ID
      parameters:
      - description: Item ID
        in: path
        name: itemID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete an item
      tags:
      - items
    get:
      consumes:
      - application/json
      description: Retrieves a todo item by its ID
      parameters:
      - description: Item ID
        in: path
        name: itemID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get item by ID
      tags:
      - items
    put:
      consumes:
      - application/json
      description: Updates a todo item by its ID
      parameters:
      - description: Item ID
        in: path
        name: itemID
        required: true
        type: integer
      - description: Update Item Data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/todo.UpdateItemInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an item
      tags:
      - items
  /api/lists/:
    get:
      consumes:
      - application/json
      description: Retrieves all todo lists for the current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all lists
      tags:
      - lists
    post:
      consumes:
      - application/json
      description: Creates a new todo list
      parameters:
      - description: Todo List
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/todo.TodoList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new list
      tags:
      - lists
  /api/lists/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a todo list by its ID
      parameters:
      - description: List ID
        in: path
        name: listID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a list
      tags:
      - lists
    get:
      consumes:
      - application/json
      description: Retrieves a todo list by its ID
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a list by ID
      tags:
      - lists
    put:
      consumes:
      - application/json
      description: Updates a todo list by its ID
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update List Data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/todo.UpdateListInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a list
      tags:
      - lists
  /api/lists/{listID}/items:
    get:
      consumes:
      - application/json
      description: Retrieves all todo items in a specific list
      parameters:
      - description: List ID
        in: path
        name: listID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all items
      tags:
      - items
    post:
      consumes:
      - application/json
      description: Creates a new todo item in a specific list
      parameters:
      - description: List ID
        in: path
        name: listID
        required: true
        type: integer
      - description: Todo Item
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/todo.TodoItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new item
      tags:
      - items
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/todo.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Registers a new user
      parameters:
      - description: User data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/todo.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Create a user
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
